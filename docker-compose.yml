version: "3"
 
services:

  jenkins:
    user: root
    image: "jenkins/jenkins:jdk11"
    ports:
      - "8080:8080"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /usr/local/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mynet
      
  sonarqube:
    image: "sonarqube:community"
    ports:
      - "9000:9000"
    networks:
     - mynet
    environment:
      - sonar.jdbc.url=jdbc:postgresql://sonarqube_db:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      
  sonarqube_db:
    image: postgres
    networks:
      - mynet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  remnux:
    image: remnux/remnux-distro
    volumes:
     - .:/home/remnux/files
    networks:
      - mynet
      
  owaspzap:
    user: zap
    image: owasp/zap2docker-stable
    ports:
      - "8081:8080"
      - "8090:8090"
    command: zap-webswing.sh
    networks:
      - mynet
      
  aquasectrivy:
    image: my_aquasectrivy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/Library/Caches:/root/.cache/
    networks:
      - mynet

  # owaspdeptrack:
  #   image: owasp/dependency-track
  #   volumes:
  #     - dependency-track:/opt/dependency-track/data
  #   ports:
  #     - "8180:8080"
  #     - "8181:8081"
  #   networks:
  #     - mynet
  dtrack-apiserver:
     image: dependencytrack/apiserver
     deploy:
       resources:
         limits:
           memory: 12288m
         reservations:
           memory: 8192m
       restart_policy:
         condition: on-failure
     ports:
       - '8181:8080'
     volumes:
       - 'dependency-track:/opt/dependency-track/data'
     restart: unless-stopped
     networks:
      - mynet

  dtrack-frontend:
     image: dependencytrack/frontend
     depends_on:
       - dtrack-apiserver
     environment:
       - API_BASE_URL=http://localhost:8180
     ports:
       - "8180:8080"
     restart: unless-stopped
     networks:
      - mynet


networks:
  mynet:
    driver: bridge
volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  dependency-track:

